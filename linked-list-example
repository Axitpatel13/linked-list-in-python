class Node:
    def __init__(self, data):
        self.data = data
        self.next = None
class LinkedList:
    def __init__(self):
        self.head = None  

    def append(self, data):
        new_node = Node(data)
        if self.head is None:
            self.head = new_node  
            return
        last = self.head
        while last.next:
            last = last.next  
        last.next = new_node  

    def prepend(self, data):
        new_node = Node(data)
        new_node.next = self.head 
        self.head = new_node

    def delete_with_value(self, data):
        if self.head is None:
            return  
        if self.head.data == data:
            self.head = self.head.next  
            return
        current = self.head
        while current.next and current.next.data != data:
            current = current.next  
        if current.next:
            current.next = current.next.next  

    def display(self):
        """Display the linked list."""
        nodes = []
        current = self.head
        while current:
            nodes.append(current.data)
            current = current.next
        print(" -> ".join(map(str, nodes)))

ll = LinkedList()
ll.append(1)
ll.append(2)
ll.append(3)
ll.prepend(0)
ll.display()  # Output: 0 -> 1 -> 2 -> 3
ll.delete_with_value(2)
ll.display()  # Output: 0 -> 1 -> 3
